openapi: 3.0.3
info:
  title: Grandma's Recipes and More
  description: "API contract for the \"Grandma's Recipes and More\" app, enabling interaction between the client and server"
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/liorhen/recipes_api/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /recipes:
    post:
      tags:
      - Recipe
      summary: Create a new recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRecipe'
        required: true
      responses:
        "201":
          description: Recipe created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
  /recipes/{id}/instructions:
    get:
      tags:
      - Bonus - Preparation
      summary: Get step-by-step preparation instructions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Array of preparation steps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreparationStep'
  /users/{userId}/recipes/{id}/progress:
    get:
      tags:
      - Bonus - Preparation
      summary: Get recipe preparation progress
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Progress for the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
    post:
      tags:
      - Bonus - Preparation
      summary: Save recipe preparation progress
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Progress'
        required: true
      responses:
        "200":
          description: Progress saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
  /users/{userId}/favorites:
    get:
      tags:
      - Personal Area
      summary: Get user's favorite recipes
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Array of favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
    post:
      tags:
      - Personal Area
      summary: Add recipe to favorites
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userId_favorites_body'
        required: true
      responses:
        "201":
          description: Recipe added to favorites
  /users/{userId}/recipes:
    get:
      tags:
      - Personal Area
      summary: Get user's created recipes
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: List of user's created recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
  /users/{userId}/family-recipes:
    get:
      tags:
      - Personal Area
      summary: Get user's family recipes
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: List of family recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyRecipe'
  /filters/cuisines:
    get:
      tags:
      - Search
      summary: Get list of cuisines
      responses:
        "200":
          description: List of cuisine strings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /filters/diets:
    get:
      tags:
      - Search
      summary: Get list of diets
      responses:
        "200":
          description: List of diet strings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /filters/intolerances:
    get:
      tags:
      - Search
      summary: Get list of intolerances
      responses:
        "200":
          description: List of intolerance strings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /recipes/search:
    get:
      tags:
      - Search
      summary: Search for recipes
      parameters:
      - name: query
        in: query
        description: Search string
        required: false
        schema:
          type: string
      - name: cuisines
        in: query
        description: Comma-separated cuisine values
        required: false
        schema:
          type: string
      - name: diets
        in: query
        description: Comma-separated diet values
        required: false
        schema:
          type: string
      - name: intolerances
        in: query
        description: Comma-separated intolerance values
        required: false
        schema:
          type: string
      - name: limit
        in: query
        description: Number of results
        required: false
        schema:
          type: integer
          default: 10
          enum:
          - 5
          - 10
          - 15
      - name: sort
        in: query
        description: Sort results
        required: false
        schema:
          type: string
          enum:
          - time
          - popularity
      responses:
        "200":
          description: Array of search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "204":
          description: No results found
  /users/{userId}/search/last:
    get:
      tags:
      - Search
      summary: Get user's last search
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Last search object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchRequestWithResults'
components:
  schemas:
    Ingredient:
      type: object
      properties:
        name:
          type: string
        amount:
          type: string
      description: Ingredient used in a recipe
    Step:
      type: object
      properties:
        number:
          type: integer
        description:
          type: string
      description: Step in recipe instructions
    RecipePreview:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        image:
          type: string
        readyInMinutes:
          type: integer
        likes:
          type: integer
        vegan:
          type: boolean
        vegetarian:
          type: boolean
        glutenFree:
          type: boolean
        viewed:
          type: boolean
        favorited:
          type: boolean
      description: Preview of a recipe
    NewRecipe:
      type: object
      properties:
        title:
          type: string
        image:
          type: string
        readyInMinutes:
          type: integer
        servings:
          type: integer
        vegan:
          type: boolean
        vegetarian:
          type: boolean
        glutenFree:
          type: boolean
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: array
          items:
            $ref: '#/components/schemas/Step'
        userId:
          type: integer
      description: Structure to create a new recipe
    FamilyRecipe:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        createdBy:
          type: string
        traditionalDate:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: array
          items:
            $ref: '#/components/schemas/Step'
        photos:
          type: array
          items:
            type: string
      description: Family recipe details
    SearchRequestWithResults:
      type: object
      properties:
        query:
          type: string
        cuisines:
          type: array
          items:
            type: string
        diets:
          type: array
          items:
            type: string
        intolerances:
          type: array
          items:
            type: string
        limit:
          type: integer
        sort:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/RecipePreview'
    PreparationStep:
      type: object
      properties:
        number:
          type: integer
        description:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
    Progress:
      type: object
      properties:
        completedSteps:
          type: array
          items:
            type: integer
      description: Recipe preparation progress
    userId_favorites_body:
      type: object
      properties:
        recipeId:
          type: integer
